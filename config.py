import  argparse

args = argparse.ArgumentParser()
args.add_argument('--dataset', type=str, default='YAGO')
args.add_argument('--time-stamp', type=int, default=1)
args.add_argument('--lr', type=float, default=0.001)
args.add_argument('--n-epochs', type=int, default=30)
args.add_argument('--hidden-dim', type=int, default=200)
args.add_argument("--gpu", type=int, default=0, help="gpu")
args.add_argument("--regularization", type=float, default=0.01, help="regularization weight")
args.add_argument('--valid-epoch', type=int, default=5)
args.add_argument('--alpha', type=float, default=0.5)
args.add_argument('--batch-size', type=int, default=1024)
args.add_argument('--raw', action='store_true', default=True)
args.add_argument('--counts', type=int, default=4)
args.add_argument('--his_len', type=int, default=0)
args.add_argument('--entity', type=str, default='subject')
args.add_argument("--dropout", type=float, default=0.5, help="dropout probability")

args.add_argument('--embedding-dim', type=int, default=200, help='The embedding dimension (1D). Default: 200')
args.add_argument('--hidden-drop', type=float, default=0.3, help='Dropout for the hidden layer. Default: 0.3.')
args.add_argument('--input-drop', type=float, default=0.2, help='Dropout for the input embeddings. Default: 0.2.')
args.add_argument('--feat-drop', type=float, default=0.2, help='Dropout for the convolutional features. Default: 0.2.')
args.add_argument('--embedding-shape1', type=int, default=20, help='The first dimension of the reshaped 2D embedding. The second dimension is infered. Default: 20')
args.add_argument('--use-bias', action='store_true', help='Use a bias in the convolutional layer. Default: True')
args.add_argument('--hidden-size', type=int, default=14848, help='The side of the hidden layer. The required size changes with the size of the embeddings. Default: 9728 (embedding size 200).')

args = args.parse_args()
print(args)
